---
name: Master

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  config_check:
    name: Check Home Assistant Config
    runs-on: ubuntu-latest
    steps:
      - name: Getting configuration from GitHub
        uses: actions/checkout@v1
      - name: Copy stubbed data
        run: |
          mv .stubs/mock_secrets.yaml secrets.yaml
          mv .stubs/ssl/ ssl/
          mv .stubs/SERVICE_ACCOUNT.json config/SERVICE_ACCOUNT.json
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check HA config
        uses: docker://homeassistant/home-assistant:stable
        with:
          args: >
            python -m homeassistant --script check_config --config ./config --info all
      - name: Notify if CI failure
        if: failure()
        run: curl -X POST "${{ secrets.HA_URL }}/api/webhook/ci_failure"

  static_checks:
    name: Perform Static Analysis
    runs-on: ubuntu-latest
    env:
      SKIP: home-assistant-config-check, shfmt
    steps:
      - name: Getting configuration from GitHub
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v2
      - name: Run pre-commit hooks
        uses: pre-commit/action@v2.0.0
      - name: Notify if CI failure
        if: failure()
        run: curl -X POST "${{ secrets.HA_URL }}/api/webhook/ci_failure"

  deploy:
    name: Deploy Config
    runs-on: ubuntu-latest
    env:
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
    needs: [config_check, static_checks]
    steps:
      - name: Getting configuration from GitHub
        uses: actions/checkout@v1
      - name: Turnstyle
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get secrets from vault
        run: |
          docker build -t 1password-secrets ./scripts/get-secrets
          docker run 1password-secrets "${{ secrets.OP_ADDRESS }}" "${{ secrets.OP_EMAIL }}" "${{ secrets.OP_PASSWORD }}" "${{ secrets.OP_SECRET_KEY}}" "${{ secrets.OP_DEVICE }}" >> config/secrets.yaml
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Sync config & restart
        run: ./scripts/sync-config.sh "$SSH_USER" "$SSH_HOST" "${{ secrets.HA_URL }}/api/webhook/manual_restart"
      - name: Wait for HA
        run: ./scripts/ha-running-check.sh "${{ secrets.HA_URL }}" "${{ secrets.HA_TOKEN }}"
      - name: Notify if CI failure
        if: failure()
        run: curl -X POST "${{ secrets.HA_URL }}/api/webhook/ci_failure"
